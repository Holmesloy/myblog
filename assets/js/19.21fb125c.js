(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{499:function(t,s,a){t.exports=a.p+"assets/img/storage.c71b627d.png"},564:function(t,s,a){"use strict";a.r(s);var e=a(4),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"html"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#html"}},[t._v("#")]),t._v(" HTML")]),t._v(" "),e("h2",{attrs:{id:"html5的新特性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#html5的新特性"}},[t._v("#")]),t._v(" HTML5的新特性")]),t._v(" "),e("p",[t._v("（1）语义化标签：header、footer、nav、aside"),e("br"),t._v("\n（2）增强型表单：input的多个type（color、data、email、url）"),e("br"),t._v("\n（3）新增表单属性：placeholder、required、min和max、step、height和width"),e("br"),t._v("\n（4）音频视频：audio、video"),e("br"),t._v("\n（5）canvas"),e("br"),t._v("\n（6）本地存储：localStorage、sessionStorage"),e("br"),t._v("\n（7）新事件：onresize、ondrag、onscroll、onpause"),e("br"),t._v("\n（8）WebSocket")]),t._v(" "),e("h2",{attrs:{id:"语义化标签的作用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#语义化标签的作用"}},[t._v("#")]),t._v(" 语义化标签的作用")]),t._v(" "),e("ul",[e("li",[t._v("贴合实际语义，易于理解和记忆，增强可读性")]),t._v(" "),e("li",[t._v("样式丢失时可以使页面呈现较为清晰的结构（如若全是div则结构会混乱）")]),t._v(" "),e("li",[t._v("方便其他设备解析，渲染网页")]),t._v(" "),e("li",[t._v("有利于SEO（让搜索引擎更容易读懂）")]),t._v(" "),e("li",[t._v("便于团队开发和维护，遵循W3C标准，减少差异化"),e("br"),t._v("\n注：W3C（万维网联盟），致力于发展Web规范，制定标准，解决Web应用中不同平台、技术的不兼容等问题")])]),t._v(" "),e("h2",{attrs:{id:"link和-import的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#link和-import的区别"}},[t._v("#")]),t._v(" link和@import的区别")]),t._v(" "),e("ul",[e("li",[t._v("link是HTML提供的标签，不仅可以加载样式，还可以加载其他资源，如图片、脚本等。而@import只能用于加载CSS文件")]),t._v(" "),e("li",[t._v("多个link引入的文件可以并行解析，而@import要等到页面加载完成之后才开始加载")]),t._v(" "),e("li",[t._v("可以使用js操作DOM动态引入link，@import只能用于CSS")]),t._v(" "),e("li",[t._v("link引入的样式权重大于@import")])]),t._v(" "),e("h2",{attrs:{id:"src和href的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#src和href的区别"}},[t._v("#")]),t._v(" src和href的区别")]),t._v(" "),e("ul",[e("li",[t._v("src（source），属性中可以设置src的标签一般为替换标签，用于将资源加载后替换该标签的内容，src加载的资源会阻塞DOM解析")]),t._v(" "),e("li",[t._v("href（hypertext reference），属性中可以设置href的标签一般为引用或者链接标签，用于引用互联网上其他资源或者锚点，引用的资源不会阻塞DOM解析，而是并行加载")])]),t._v(" "),e("h2",{attrs:{id:"script中async和defer的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#script中async和defer的区别"}},[t._v("#")]),t._v(" script中async和defer的区别")]),t._v(" "),e("ul",[e("li",[t._v("async：并行加载，加载完成立即执行加载的资源，会打断DOM解析")]),t._v(" "),e("li",[t._v("defer：并行加载延迟执行，加载完成后等待DOM解析完成后再执行")]),t._v(" "),e("li",[t._v("async资源执行的顺序不可控，先加载完的资源先执行；defer加载完成后的资源按照加载开始顺序放在队列中，DOM解析完成后依次执行")])]),t._v(" "),e("h2",{attrs:{id:"doctype的作用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#doctype的作用"}},[t._v("#")]),t._v(" DOCTYPE的作用")]),t._v("\n<!DOCTYPE>声明一般位于第一行，用于告诉浏览器以什么样的模式来解析文档，如果不存在的话文档以兼容模式呈现。  \n"),e("p",[t._v("一般指定之后会以标准模式进行文档解析，浏览器按照最新标准进行解析。否则以兼容模式进行解析，浏览器会以向后兼容的方式确保一些老的网站可以正常访问。"),e("br"),t._v(" "),e("code",[t._v("<meta>")]),t._v(" 元素可提供有关页面的元信息（meta-information），比如针对搜索引擎和更新频度的描述和关键词。")]),t._v(" "),e("h2",{attrs:{id:"localstorage，sessionstorage和cookie"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#localstorage，sessionstorage和cookie"}},[t._v("#")]),t._v(" localStorage，sessionStorage和cookie")]),t._v(" "),e("h3",{attrs:{id:"cookie"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[t._v("#")]),t._v(" Cookie")]),t._v(" "),e("ul",[e("li",[t._v("本质上就是浏览器里面存储的一个很小的文本文件，内部以键值对的方式来存储（开发者面板Application查看）")]),t._v(" "),e("li",[t._v("用来做状态存储")])]),t._v(" "),e("p",[e("strong",[t._v("缺陷")])]),t._v(" "),e("ul",[e("li",[t._v("容量：最大4KB，只能存储少量xinx")]),t._v(" "),e("li",[t._v("性能：请求都会携带Cookie，请求数越多，性能浪费越大")]),t._v(" "),e("li",[t._v("安全：纯本本形式存储和传递，容易被截获。另外，当HttpOnly为false时，Cookie可以直接通过js脚本获取")])]),t._v(" "),e("h3",{attrs:{id:"localstorage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#localstorage"}},[t._v("#")]),t._v(" localStorage")]),t._v(" "),e("p",[t._v("在同一域名下，会存储一段相同的信息")]),t._v(" "),e("ul",[e("li",[t._v("容量：最大5M，针对一个域名，对于一个域名来说是持久存储的")]),t._v(" "),e("li",[t._v("只存在于客户端，默认不参与与服务端的通信，避免了一些性能和安全问题")]),t._v(" "),e("li",[t._v("接口封装，使用setItem和getItem方法操作，首先设置信息，然后在同一域名就可以获取到该信息")]),t._v(" "),e("li",[t._v("localStorage存储的是字符串，如果要存储对象需要用JSON方法转换和解析")])]),t._v(" "),e("h3",{attrs:{id:"sessionstorage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sessionstorage"}},[t._v("#")]),t._v(" sessionStorage")]),t._v(" "),e("ul",[e("li",[t._v("只存在于当前会话下，关闭tab页消失")]),t._v(" "),e("li",[t._v("其他和localStorage相似")])]),t._v(" "),e("p",[e("strong",[t._v("应用场景")]),t._v("\n存储表单信息，当页面刷新时信息也不会消失")]),t._v(" "),e("p",[e("strong",[t._v("应用场景")]),t._v("\n使用localStorage可以存储一些内容稳定的资源，如官网logo，Base64的图片资源，leetcode中的编辑器信息等")]),t._v(" "),e("h3",{attrs:{id:"indexeddb"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#indexeddb"}},[t._v("#")]),t._v(" IndexedDB")]),t._v(" "),e("ul",[e("li",[t._v("运行在浏览器中的非关系型数据库，没有容量限制")]),t._v(" "),e("li",[t._v("使用键值对存储，支持异步操作，同时也受同源策略限制")]),t._v(" "),e("li",[t._v("常用于大型的数据存储")])]),t._v(" "),e("p",[e("img",{attrs:{src:a(499),alt:"storage"}})]),t._v(" "),e("h2",{attrs:{id:"canvas与svg"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#canvas与svg"}},[t._v("#")]),t._v(" Canvas与SVG")]),t._v(" "),e("p",[t._v("Canvas和SVG都可以在浏览器中创建图形。"),e("br"),t._v(" "),e("strong",[t._v("Canvas")])]),t._v(" "),e("ul",[e("li",[t._v("通过Javascript来绘制2D图形")]),t._v(" "),e("li",[t._v("逐个像素进行渲染，输出一整幅画布，就像一张图片一样")]),t._v(" "),e("li",[t._v("当位置发生改变时，会重新进行绘制")])]),t._v(" "),e("p",[e("strong",[t._v("SVG")])]),t._v(" "),e("ul",[e("li",[t._v("一种使用XML描述的2D图形的语言")]),t._v(" "),e("li",[t._v("SVG绘制出来的每一个图形元素都是独立的DOM节点，可方便后期绑定事件或修改")]),t._v(" "),e("li",[t._v("SVG输出的图形是矢量的，后期可用修改参数来自由放大缩小，无失真。")])]),t._v(" "),e("p",[e("strong",[t._v("区别")])]),t._v(" "),e("ul",[e("li",[t._v("Canvas依赖分辨率，不依赖事件处理器，SVG相反")]),t._v(" "),e("li",[t._v("Canvas能够以png格式保存图像，最适合图像密集型的游戏，对象会被频繁重绘")]),t._v(" "),e("li",[t._v("SVG适合像谷歌地图一样的渲染区域的程序使用，复杂度高会减慢渲染速度，不适合游戏")])]),t._v(" "),e("h2",{attrs:{id:"web-worker和web-socket"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#web-worker和web-socket"}},[t._v("#")]),t._v(" Web Worker和Web Socket")]),t._v(" "),e("h3",{attrs:{id:"web-worker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#web-worker"}},[t._v("#")]),t._v(" Web Worker")]),t._v(" "),e("ul",[e("li",[t._v("背景：当HTML页面在执行脚本时，页面的状态是不可响应的，直到脚本完成")]),t._v(" "),e("li",[t._v("webworker是运行在后台的独立js脚本，不影响页面性能")]),t._v(" "),e("li",[t._v("理论上，除了DOM操作外，任何js脚本任务都可以放在worker中执行，但不能跨域访问js")]),t._v(" "),e("li",[t._v("workder常用于需要消耗大量时间和cpu资源的复杂计算，提高了服务性能")])]),t._v(" "),e("p",[e("strong",[t._v("使用：")])]),t._v(" "),e("ul",[e("li",[t._v("创建一个webworker，它会持续监听消息，直到它被终止")]),t._v(" "),e("li",[t._v("为其添加一个onmessage事件监听器获取消息，进行相应逻辑处理")]),t._v(" "),e("li",[t._v("然后通过事件监听来处理message，在worker内部通过self.函数和主线程通信")]),t._v(" "),e("li",[t._v("发送消息：postMessage()；终止并是否资源：terminate()")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" worker "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Worker")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"worker_job.js"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建一个Worker对象并向它传递将在新线程中执行的脚本的URL  ")]),t._v("\n\nworker"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("postMessage")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//向worker发送数据  ")]),t._v("\n\nworker"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onmessage")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("evt")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("     "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//接收worker传过来的数据函数  ")]),t._v("\n   console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("evt"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("              "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//输出worker发送来的数据  ")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n\nself"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'message'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" data "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'init'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n        "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("init")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("  \n        "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("  \n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n\nself"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("postMessage")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello worker"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n")])])]),e("h3",{attrs:{id:"web-socket"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#web-socket"}},[t._v("#")]),t._v(" Web Socket")]),t._v(" "),e("ul",[e("li",[t._v("一种网络传输协议")]),t._v(" "),e("li",[t._v("浏览器发起请求，等待服务端响应")]),t._v(" "),e("li",[t._v("服务器返回响应，告诉浏览器将后序数据按照websocket规定的数据格式发送")]),t._v(" "),e("li",[t._v("浏览器和服务器的socket连接不中断，全双工通信，长连接")]),t._v(" "),e("li",[t._v("客户端使用websocket语法：JavaScript，服务端：使用web框架")])])])}),[],!1,null,null,null);s.default=r.exports}}]);