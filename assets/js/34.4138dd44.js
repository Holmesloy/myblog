(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{538:function(t,i,v){"use strict";v.r(i);var _=v(4),e=Object(_.a)({},(function(){var t=this,i=t.$createElement,v=t._self._c||i;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"常用git命令"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#常用git命令"}},[t._v("#")]),t._v(" 常用git命令")]),t._v(" "),v("ul",[v("li",[t._v("git init ： 将一个文件夹初始化为git文件夹g'f'd")]),t._v(" "),v("li",[t._v("git add.  ：添加新文件或者修改的所有文件添加到git")]),t._v(" "),v("li",[t._v("git checkout xxx ：xxx文件撤回修改（.是全部修改撤销）")]),t._v(" "),v("li",[t._v('git commit -m ""：提交到本地仓库')]),t._v(" "),v("li",[t._v("git push origin master：推送到远程仓库")]),t._v(" "),v("li",[t._v("git pull origin master：从远程仓库获取代码")]),t._v(" "),v("li",[t._v("git branch dev：添加分支dev")]),t._v(" "),v("li",[t._v("git checkout -b xx / git checkout xx：切换到xx分支上")]),t._v(" "),v("li",[t._v("git merge xxx：合并文件到当前分支")]),t._v(" "),v("li",[t._v("git push origin 分支名 ：将该分支提交到远程仓库")])]),t._v(" "),v("p",[v("strong",[t._v("将远程分支合并到master")])]),t._v(" "),v("ol",[v("li",[t._v("首先切换到master")]),t._v(" "),v("li",[t._v("然后使用git fetch")]),t._v(" "),v("li",[t._v("git merge 分支名 ：将该分支合并到master")]),t._v(" "),v("li",[t._v("git push origin master：提交到远程分支")])]),t._v(" "),v("p",[t._v("git两个分支互不影响，切换分支后另一分支的修改不会出现在该分支（无论是add后还是commit后）")]),t._v(" "),v("p",[t._v("两个分支修改了同一个文件：发生冲突（conflict）"),v("br"),t._v("\n根据git显示的信息以及自身的需求进行修改，选择接受哪一个或者都接受，若出现错误冲突则要先修改代码")]),t._v(" "),v("p",[t._v("当修改代码时，发现不小心在主分支上修改了，但是这不符合要求，可不能全删除吧，这时候使用："),v("br"),t._v("\ngit stash：将刚修改的内容放入栈中，然后就可以切换到其他分支"),v("br"),t._v("\n然后在该分支使用git stash pop，将修改的内容添加到当前分支上")])])}),[],!1,null,null,null);i.default=e.exports}}]);