(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{543:function(t,s,a){"use strict";a.r(s);var e=a(4),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"弹性盒模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#弹性盒模型"}},[t._v("#")]),t._v(" 弹性盒模型")]),t._v(" "),a("p",[t._v("使用"),a("code",[t._v("display: flex")]),t._v("，即可以使一个元素成为弹性容器，可以进行flex布局。")]),t._v(" "),a("ul",[a("li",[t._v("弹性盒有两根轴，主轴和交叉轴，主轴可以水平，也可以竖直")]),t._v(" "),a("li",[t._v("盒子中的子元素为弹性元素，子元素永远沿主轴排列")])]),t._v(" "),a("h2",{attrs:{id:"弹性容器属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#弹性容器属性"}},[t._v("#")]),t._v(" 弹性容器属性")]),t._v(" "),a("ul",[a("li",[t._v("flex-direction：主轴方向")]),t._v(" "),a("li",[t._v("flex-wrap：是否换行")]),t._v(" "),a("li",[t._v("flex-flow：direction和wrap的缩写，默认值为"),a("code",[t._v("row nowrap")])]),t._v(" "),a("li",[t._v("jusify-content：元素在主轴上的对齐方式")]),t._v(" "),a("li",[t._v("align-items：元素在交叉轴上的对齐方式")]),t._v(" "),a("li",[t._v("align-content：多跟轴线的对齐方式，如果只有一根轴线则无效")])]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 主轴方向为水平轴、水平轴反向、纵轴、纵轴反向 */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-direction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" row | row-reverse | column | column-reverse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 换行、不换行、换行第一行跑到下方 */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-wrap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" wrap | nowrap | wrap-reverse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 对齐方式：左对齐、右对齐、居中、两端对齐、所有两侧间隔相等 */")]),t._v("\n    flex-start | flex-end | center | space-between | space-around\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"项目属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#项目属性"}},[t._v("#")]),t._v(" 项目属性")]),t._v(" "),a("ul",[a("li",[t._v("order：项目排列顺序，数值越小越靠前")]),t._v(" "),a("li",[t._v("flex-grow：项目放大比例，默认0，即存在剩余空间也不放大")]),t._v(" "),a("li",[t._v("flex-shrink：缩小比例，默认为1，即空间不足则会缩小")]),t._v(" "),a("li",[t._v("flex-basis：分配多余空间之前，项目占据的主轴空间，默认auto，即本来大小")]),t._v(" "),a("li",[t._v("flex：flex-grow flex-shrink flex-basis的缩写")]),t._v(" "),a("li",[t._v("align-self：单个项目的对齐属性，覆盖align-items")])]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".ele")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1  ==  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1 1 0%\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2  ==  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2 1 0%\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" auto  ==  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1 1 auto\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" none  ==  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0 0 auto   // 固定尺寸，不伸缩\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("flex:1 和 flex:auto 区别：")]),t._v(" "),a("ul",[a("li",[t._v("相当于flex-basis:0 和 flex-basis:auto 的区别")]),t._v(" "),a("li",[t._v("设置为0时，表示伸缩时不需要考虑元素本身尺寸，设置auto时要考虑元素的尺寸")])])])}),[],!1,null,null,null);s.default=n.exports}}]);